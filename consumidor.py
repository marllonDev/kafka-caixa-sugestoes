import json
import time
from kafka import KafkaConsumer

# Nome do t√≥pico que vamos "ouvir"
TOPIC_NAME = 'sugestoes-topic'
# ID do grupo de consumidores para nossa "equipe de oper√°rios"
GROUP_ID = 'grupo-sugestoes-arquivistas'
# Endere√ßo do nosso servidor Kafka (agora acess√≠vel do seu PC)
BOOTSTRAP_SERVERS = 'localhost:9092'

print("‚û°Ô∏è  Iniciando Consumidor Kafka...")
print(f"   T√≥pico: {TOPIC_NAME}")
print(f"   Grupo de Consumidores: {GROUP_ID}")

consumer = None
for i in range(5):
    try:
        # Instanciamos o Consumidor
        consumer = KafkaConsumer(
            TOPIC_NAME,
            bootstrap_servers=BOOTSTRAP_SERVERS,
            group_id=GROUP_ID,
            auto_offset_reset='earliest', # Come√ßa a ler desde a mensagem mais antiga
            value_deserializer=lambda v: json.loads(v.decode('utf-8'))
        )
        print("‚úÖ Consumidor Kafka conectado com sucesso!")
        break
    except Exception as e:
        print(f"‚ùå Tentativa {i+1}/5 falhou. Erro ao conectar com o Kafka: {e}")
        time.sleep(5)

if not consumer:
    print("üö® N√£o foi poss√≠vel conectar ao Kafka. Encerrando o consumidor.")
else:
    print("\nüéß Ouvindo o t√≥pico em busca de novas sugest√µes...")
    try:
        # Este loop fica 'travado', esperando por novas mensagens.
        for message in consumer:
            sugestao = message.value
            
            # A√ß√£o principal: Imprimir a mensagem recebida!
            print("\n----------------------------------------------------")
            print(f"üì¨ Nova sugest√£o recebida!")
            print(f"   - Parti√ß√£o: {message.partition}")
            print(f"   - Offset: {message.offset}")
            print(f"   - Conte√∫do: {sugestao}")
            print("----------------------------------------------------")

    except KeyboardInterrupt:
        print("\n\nüîå Desligando o consumidor...")
    finally:
        consumer.close()