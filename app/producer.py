import json
from kafka import KafkaProducer
from . import config  # Importa as nossas configura√ß√µes centralizadas

# --- Vari√°vel Global para o Produtor ---
# Vamos criar uma √∫nica inst√¢ncia do produtor que pode ser reutilizada
# em toda a aplica√ß√£o. Isso √© mais eficiente do que criar uma nova a cada mensagem.
producer = None

# --- Fun√ß√£o de Inicializa√ß√£o ---
def initialize_producer() -> None:
    """
    Inicializa a conex√£o com o Kafka e cria a inst√¢ncia do produtor.
    Esta fun√ß√£o ser√° chamada uma vez quando a nossa API iniciar.
    """
    # A palavra-chave 'global' nos permite modificar a vari√°vel 'producer'
    # que foi declarada fora desta fun√ß√£o.
    global producer
    
    try:
        # Criamos a inst√¢ncia do Produtor, mas agora lendo as configura√ß√µes
        # do nosso arquivo config.py, que importamos acima.
        producer = KafkaProducer(
            bootstrap_servers=config.KAFKA_SERVER,
            # O serializador continua o mesmo: converte nosso dicion√°rio para JSON em bytes.
            value_serializer=lambda v: json.dumps(v).encode('utf-8')
        )
        print("‚úÖ Produtor Kafka inicializado com sucesso!")
    except Exception as e:
        # Se a conex√£o falhar, informamos o erro e a vari√°vel 'producer'
        # continuar√° como 'None'.
        print(f"‚ùå Erro ao inicializar o produtor Kafka: {e}")
        producer = None

# --- Fun√ß√£o para Enviar Mensagens ---
def send_message(topic, message):
    """
    Envia uma mensagem para um t√≥pico espec√≠fico do Kafka.

    Args:
        topic (str): O nome do t√≥pico de destino.
        message (dict): A mensagem a ser enviada (em formato de dicion√°rio).
    
    Returns:
        bool: True se a mensagem foi enviada para o buffer, False em caso de erro.
    """
    # Verificamos primeiro se a nossa inst√¢ncia do produtor foi inicializada com sucesso.
    if not producer:
        print("üö® Produtor Kafka n√£o est√° dispon√≠vel.")
        return False
    
    try:
        # Usamos a inst√¢ncia global 'producer' para enviar a mensagem.
        print(f"üì® Enviando mensagem para o t√≥pico '{topic}': {message}")
        producer.send(topic, value=message)
        # For√ßa o envio de mensagens pendentes. √â uma boa pr√°tica para garantir
        # que mensagens importantes n√£o fiquem muito tempo no buffer.
        producer.flush()
        print("üëç Mensagem enviada com sucesso!")
        return True
    except Exception as e:
        print(f"üî• Erro ao enviar mensagem: {e}")
        return False